top = '.'
try:
    out
except NameError:
    # out not defined
    out = 'build'

import os
from waflib import Logs

def options(conf):
    pass

def configure(conf):
    Logs.info("Utils: Configuring...")

def makeInstall(ctx):
    from IasWafBuildTools.Installer import Installer
    installer = Installer(ctx)
    ctx.add_to_group(installer)

def makeBuild(bld):

    Logs.info("Building %s",bld.path.abspath())

    print("Root abspath",bld.root.abspath())
    print("bld.path contents %r" % bld.path.children)
    print("bld.path parent   %r" % bld.path.parent.abspath())
    print("bld.root parent   %r" % bld.root.parent)
    print("Build node", bld.bldnode)
    print('=====>>> Utils build command', bld.cmd)

    #
    # get Jars from extTools
    #
    from IasWafBuildTools.JarTasks import getJarsFromExtTools
    copyExtJarTask = getJarsFromExtTools(bld)
    bld.add_to_group(copyExtJarTask)

    #
    # Get jar from tar
    #
    tarFileName="logback-1.2.3.tar.gz"
    jars = ["logback-core-1.2.3.jar", "logback-classic-1.2.3.jar"]
    from IasWafBuildTools.JarTasks import jarsFromTar
    getJarsFromTarTask = jarsFromTar(tarFileName,jars, bld.env)
    getJarsFromTarTask.set_run_after(copyExtJarTask)
    bld.add_to_group(getJarsFromTarTask)

    #
    # Python modules
    #
    from IasWafBuildTools.PythonBuilder import buildPythonModules
    bldPyMods = buildPythonModules(bld)
    bld.add_to_group(bldPyMods)

    #
    # Python scripts
    #
    from IasWafBuildTools.FileTasks import CopyTask
    bldPyScripts = CopyTask(
        bld.env,
        bld.env.PYSRCFOLDER,
        bld.env.BLDBINFOLDER,
        remove_extension=True,
        make_executable=True,
        file_extension=".py"
    )
    bldPyScripts.color='GREY'
    bld.add_to_group(bldPyScripts)

    #
    # Scala sources
    #
    from IasWafBuildTools.ScalaBuilder import buildScala
    scalaBuilder = buildScala(bld)
    scalaBuilder.set_run_after(getJarsFromTarTask)
    bld.add_to_group(scalaBuilder)

    #
    # Build the jar
    #
    from IasWafBuildTools.JarTasks import buildJar
    jarBuilder = buildJar(bld, "iasUtils.jar")
    jarBuilder.set_run_after(scalaBuilder)
    bld.add_to_group(jarBuilder)

def build(bld):
    bld.load('IasWafBuildTools', tooldir='../WafBuildTools/src/main/python/')
    bld.add_group("Utils")
    from IasWafBuildTools.Utils import set_env
    set_env(bld.env,bld.path,bld.bldnode)
    bld.env.PREFIX = os.environ['IAS_ROOT']

    if bld.cmd == 'build':
        makeBuild(bld)
    elif bld.cmd == 'install':
        makeInstall(bld)
    elif bld.cmd == 'clean':
        Logs.info("Cleaning %s",bld.bldnode.abspath())
        bld(rule='ls', always=True)
