top = '..'
out = 'build'

import os
from waflib import Logs

def options(conf):
    pass

def configure(conf):
    Logs.info("Tools: Configuring...")

def makeInstall(ctx):
    from IasWafBuildTools.Installer import Installer
    installer = Installer(ctx.env.DSTNODE.abspath(), ctx.env.PREFIX, ctx)
    ctx.add_to_group(installer)

def makeBuild(bld):
    print("Building", bld.path.abspath())

    print("Tools Root abspath",bld.root.abspath())
    print("Tools bld.path contents %r" % bld.path.children)
    print("Tools bld.path parent   %r" % bld.path.parent.abspath())
    print("Tools bld.root parent   %r" % bld.root.parent)
    print("Tools bld.top_dir   %r" % bld.top_dir)
    print("Tools Build node",bld.bldnode)

    print("\n", bld)

    #
    # get jars from ZIP
    #
    zipFileName="spring-framework-4.3.9.RELEASE-dist.zip"

    jarsInZip = [
        "spring-core-4.3.9.RELEASE.jar",
        "spring-context-4.3.9.RELEASE.jar",
        "spring-beans-4.3.9.RELEASE.jar",
        "spring-aop-4.3.9.RELEASE.jar",
        "spring-expression-4.3.9.RELEASE.jar"
    ]

    from IasWafBuildTools.JarTasks import jarsFromZip

    jarsFromZipTask = jarsFromZip(zipFileName, jarsInZip, bld.env)
    bld.add_to_group(jarsFromZipTask)

    #
    # get Jars from extTools
    #
    from IasWafBuildTools.JarTasks import getJarsFromExtTools
    copyExtJarTask = getJarsFromExtTools(bld)
    bld.add_to_group(copyExtJarTask)

    #
    # Get jar from tar
    #
    tarFileName="commons-cli-1.4-bin.tar.gz"
    jars = [ "commons-cli-1.4.jar" ]
    from IasWafBuildTools.JarTasks import jarsFromTar
    getJarsFromTarTask = jarsFromTar(tarFileName,jars, bld.env)
    bld.add_to_group(getJarsFromTarTask)

    #
    # Python modules
    #
    from IasWafBuildTools.PythonBuilder import buildPythonModules
    bldPyMods = buildPythonModules(bld)
    bld.add_to_group(bldPyMods)

    #
    # Config files
    #
    from IasWafBuildTools.FileTasks import CopyTask
    copyConfigFiles = CopyTask(bld.env, bld.env.CONFIGSRCFOLDER)
    copyConfigFiles.color= 'CYAN'
    bld.add_to_group(copyConfigFiles)

    #
    # Shell scripts
    #
    bldShScripts = CopyTask(
        bld.env,
        bld.env.SRCMAINFOLDER,
        bld.env.BLDBINFOLDER,
        remove_extension=True,
        make_executable=True,
        file_extension=".sh"
    )
    bldShScripts.color='YELLOW'
    bld.add_to_group(bldShScripts)

    #
    # Python scripts
    #
    bldPyScripts = CopyTask(
        bld.env,
        bld.env.PYSRCFOLDER,
        bld.env.BLDBINFOLDER,
        remove_extension=True,
        make_executable=True,
        file_extension=".py"
    )
    bldPyScripts.color='GREY'
    bld.add_to_group(bldPyScripts)

    # if str(bld.top_dir) != str(bld.path.abspath()):
    #     print("=====>>> Tools requesting install: ",bld.cmd,bld.top_dir,bld.path.abspath())
    #     makeInstall(bld)

def build(bld):
    bld.load('IasWafBuildTools', tooldir='../WafBuildTools/src/main/python/')
    bld.bldnode=bld.path.make_node('build')
    bld.add_group("Tools")
    from IasWafBuildTools.Utils import set_env
    set_env(bld.env,bld.path,bld.bldnode)
    bld.env.PREFIX = os.environ['IAS_ROOT']

    if bld.cmd == 'build':
        makeBuild(bld)
        bld.add_group("ToolsInstall")
        makeInstall(bld)
    elif bld.cmd == 'install':
        makeInstall(bld)
