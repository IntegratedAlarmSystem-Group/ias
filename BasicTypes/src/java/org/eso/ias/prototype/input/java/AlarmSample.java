package org.eso.ias.prototype.input.java;

/**
 * <code>AlarmSample</code> represents an alarm generated by a remote monitored system.
 * <P>
 * At this stage is not yet clear what kind of information could be needed
 * for alarms generated by remote systems but an alarm as a minimum can be
 * set or unset.
 * 
 * @author acaproni
 *
 */
public enum AlarmSample {
	// Alarm raised
	SET(true,1),
	// Alarm cleared or unset
	CLEARED(false,0);
	
	/**
	 * The representation of an alarm as a boolean value.
	 * <P>
	 * This makes sense if the alarm has only 2 possible states
	 * and shall be removed if we find out that there is the need to 
	 * define more states
	 */
	public final boolean asBoolean;
	
	/**
	 * The representation of the alarm state as integer
	 */
	public final int asInteger;
	
	/**
	 * Constructor
	 * 
	 * @param booleanValue  The boolean representation of the alarm state
	 */
	private AlarmSample(boolean booleanValue,int intgerValue) {
		this.asBoolean=booleanValue;
		this.asInteger=intgerValue;
	}
	
	/**
	 * Build an alarm sample from a boolean
	 * 
	 * @param state The boolean representing the state of the alarm
	 * @return The {@link AlarmSample} for the passed boolean state
	 */
	public static AlarmSample fromBoolean(boolean state) {
		for (AlarmSample as: AlarmSample.values()) {
			if (as.asBoolean==state) {
				return as;
			}
		}
		throw new UnsupportedOperationException("Unsupported alarm state "+state);
	}
	
	/**
	 * Return the AlarmSample for the passed integer state.
	 * 
	 * @param state The state of the alarm
	 * @return The AlrmSample for the passed integer state
	 */
	public static AlarmSample fromInteger(int state) {
		return fromBoolean(state!=0);
	}
}
