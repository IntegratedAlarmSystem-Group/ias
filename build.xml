<?xml version="1.0" encoding="UTF-8"?>

<!--
     Build the core of the IAS.

     PRE-Requisite: IAS_ROOT envirnment variable defined and pointing to
                             an existing folder
-->
<project name="BuildIAS" default="build" basedir=".">

	<property environment="env" />
	<property name="iasRoot" value="${env.IAS_ROOT}" />
	<available file="${iasRoot}" type="dir" property="iasRoot.exists"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
	<!-- IAS Modules -->
	 <resources id="iasModsResources">
        <string>Tools</string>
	 	<string>Utils</string>
        <string>Cdb</string>
        <string>BasicTypes</string>
        <string>KafkaUtils</string>
	 	<string>Heartbeat</string>
        <string>plugin</string>
        <string>Converter</string>
        <string>CompElement</string>
        <string>DistributedUnit</string>
	 	<string>Supervisor</string>
        <string>WebServerSender</string>
	 	<string>TransferFunctions</string>
 		<string>Tests/SimpleLoopTest</string>
    </resources>
    <pathconvert property="iasModules" refid="iasModsResources" pathsep="," />

    <!-- Extract git version into properties -->
    <target name="git-version">
	    <exec executable="git" outputproperty="git.branch"
	     failifexecutionfails="false">
	     <arg line="rev-parse --abbrev-ref HEAD"/>
	    </exec>
	
	    <exec executable="git" outputproperty="git.hash.long"
	     failifexecutionfails="false">
	     <arg line="rev-parse --verify HEAD"/>
	    </exec>
	
	    <exec executable="git" outputproperty="git.hash.short"
	     failifexecutionfails="false">
	     <arg line="rev-parse --short HEAD"/>
	    </exec>
	
	    <echo>Git: ${git.branch} ${git.hash.short} ${git.hash.long}</echo>
    </target>

	<target name="SanityCheck">
		<!--

			Runs some check failing in case of error
		-->
		<fail unless="iasRoot.exists">
			IAS_ROOT ${iasRoot} does not exist!
		</fail>
	</target>

	<!--
	     Sequentially runs ant in each of the the modules in ${iasModules}.
	     The targets to ant are read from anttasks
	-->
	<target name="commontask" if="anttasks">
		<echo>Running tasks ${anttasks} in ${iasModules}</echo>
		<for list="${iasModules}" param="moduleName">
            <sequential>
            	<for list="${anttasks}" param="aTask">
            		<sequential>
            			<if>
            				<and>
            					<available file="@{moduleName}/${ant-folder}" type="dir" />
            					<available file="@{moduleName}/${ant-folder}/build.xml" type="file" />
        					</and>
	        				<then>
	            				<echo>Running @{aTask} in @{moduleName}/${ant-folder}...</echo>
								<ant dir="@{moduleName}/${ant-folder}" target="@{aTask}" />
	            			</then>
	            			<else>
	            				<echo>@{aTask} in @{moduleName}/${ant-folder} does not exist</echo>
	            			</else>
            			</if>
						<echo>@{aTask} in @{moduleName} done.</echo>
        			</sequential>
        		</for>
            </sequential>
        </for>
	</target>

	<target name="clean">
        <echo>Cleaning IAS modules: ${iasModules}</echo>
		<antcall target="commontask">
			<param name="ant-folder" value="src" />
			<param name="anttasks" value="clean" />
		</antcall>
    </target>

	<target name="build" depends="git-version, SanityCheck">
		<echo>Building IAS modules: ${iasModules}</echo>
		<antcall target="commontask">
			<param name="ant-folder" value="src" />
			<param name="anttasks" value="build,install" />
		</antcall>
		<echo>Generating IAS_VERSION</echo>
        <exec executable="echo" failifexecutionfails="false">
	        <arg line="${git.branch} ${git.hash.short} ${git.hash.long}"/>
	        <redirector output="${iasRoot}/IAS_GIT_VERSION"/>
        </exec>
	</target>

	<target name="install" depends="SanityCheck">
		<echo>Installing IAS modules: ${iasModules}</echo>
		<antcall target="commontask">
			<param name="ant-folder" value="src" />
			<param name="anttasks" value="install" />
		</antcall>
	</target>

	<target name="test" depends="SanityCheck">
		<echo>Building IAS modules: ${iasModules}</echo>
		<antcall target="commontask">
			<param name="ant-folder" value="test" />
			<param name="anttasks" value="build,test" />
		</antcall>
	</target>

	<target name="doc" depends="SanityCheck">
		<delete dir="${iasRoot}/apidocs"/>
		<mkdir dir="${iasRoot}/apidocs" />
		<mkdir dir="${iasRoot}/apidocs/scala" />
		<mkdir dir="${iasRoot}/apidocs/java" />
		<mkdir dir="${iasRoot}/apidocs/python" />

		<echo>Generating API documentation</echo>
		<exec executable="iasBuildApiDocs.py">
		    <arg value="-d"/>
		    <arg value="${iasRoot}/apidocs"/>
		    <arg value="-s"/>
			<arg value="."/>
		</exec>

	</target>

</project>
