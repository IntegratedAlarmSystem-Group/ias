package org.eso.ias.cdb.pojos;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * 
 * The pojo for the ASCE
 * 
 * @author acaproni
 *
 */
@Entity
@Table(name = "ASCE")
public class AsceDao {

	@Id
	@Column(name = "asce_id")
	private String id;
	
	/**
	 * The DASU that runs this ASCE 
	 */
//	@ManyToOne
//    @JoinColumn(name = "dasu_id",
//        foreignKey = @ForeignKey(name = "DASU_ID_FK")
//    )
//    private DasuDao dasu;
	
	/**
	 * The jvm class of the transfer function
	 */
	@Basic(optional=false)
	private String tfClass;
	
	/**
	 * The IASIOs in input to the ASCE.
	 * 
	 * ManyToMany: the ASCE can have multiple IASIOs in input and the same IASIO can be 
	 * the input of more ASCEs
	 */
//	@ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE})
//    private Set<IasioDao> inputs = new HashSet<>();
	
	/**
	 * The output generated by the ASCE applying the TF to the inputs
	 */
	@OneToOne
    @JoinColumn(name = "OUTPUT_ID")
	private IasioDao output;
	
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
	@JoinTable(name= "ASCE_PROPERTY",
		joinColumns = @JoinColumn(name="asce_id"),
		inverseJoinColumns = @JoinColumn(name = "props_id"))
	private List<PropertyDao> props = new ArrayList<>();

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getTfClass() {
		return tfClass;
	}

	public void setTfClass(String tfClass) {
		this.tfClass = tfClass;
	}

	public IasioDao getOutput() {
		return output;
	}

	public void setOutput(IasioDao output) {
		this.output = output;
	}

	public List<PropertyDao> getProps() {
		return props;
	}
	
}
